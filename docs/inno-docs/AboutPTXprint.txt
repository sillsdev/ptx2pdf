PTXprint - AboutPTXprint.txt

"Bible Layout For Everyone" - Easily create scripture PDFs for trial publications

PTXprint is an easy-to-use program which harnesses the power of extended macros from PTX2PDF which is a XeTeX based macro package for typesetting USFM formatted (Paratext) scripture files.

PTXprint is available for Windows, Linux and Mac from the main home page: https://software.sil.org/ptxprint/download
It is 64-bit software and will NOT run on 32-bit systems. It is recommended to be used with Paratext 9 (or later), but can also work even if Paratext is NOT installed. It is not part of the Paratext updates ecosystem, so does not get automatically updated. Please check the PTXprint home page regularly for updated versions.

There is a category dedicated to PTXprint issues on (https://support.bible/PTXprint) where you can get assistance from other PTXprint users.

Please use "New Issue" button in the GitHub Issue Tracking System (https://github.com/sillsdev/ptx2pdf/issues) to report any bugs, or document suggestions for improvement. 

If you serve in a sensitive location, you can report issues directly by e-mail <ptxprint_support@sil.org> rather than via the publicly accessible websites listed above.


Examples of running PTXprint from the commandline (in Windows):

"C:\Program Files\PTXprint\PTXprint.exe" -c Diglot XYZ
will OPEN PTXprint with XYZ project active and the saved configuration called "Diglot" (but won't print anything)

"C:\Program Files\PTXprint\PTXprint.exe" -c NTandPsalms -P XYZ
will directly create a PDF from the XYJ project using the saved configuration called "NTandPsalms" (no GUI will appear)

"C:\Program Files\PTXprint\PTXprint.exe" -b ROM -c SideXrefs -P XYZ
will directly create a PDF of ROMANS from the XYZ project using the saved configuration called "SideXrefs" (no GUI will appear)

"C:\Program Files\PTXprint\PTXprint.exe" -b "MAT MRK LUK JHN ACT GLO" -P XYZ
will directly create a PDF of 4 gospels, Acts and Glossary from the XYJ project using the Default configuration (no GUI will appear)

"C:\Program Files\PTXprint\PTXprint.exe" -p C:\Data\VariousUSFMprojects
with -p (lowercase) and a folder name will run PTXprint pointing to that folder instead of the usual Paratext folder. Note that
it expects one or more subfolders which contain the actual USFM files. The names of any subfolders containing valid .SFM files
will appear in the Project dropdown menu once PTXprint has opened.

"C:\Program Files\PTXprint\PTXprint.exe" -d "C:\Temp"
runs PTXprint, and output PDF files will be created in C:\Temp folder instead of C:\My Paratext 9 Projects\<XYZ>\local\ptxprint

"C:\Program Files\PTXprint\PTXprint.exe" -h
will show the commandline usage parameters (as seen below)
 
usage: PTXprint.exe [-h] [-c CONFIG] [-M MODULE] [-p PARATEXT] [-d DIRECTORY]
                    [-P] [-b BOOKS] [-Z ZIP] [-R RUNS] [-q] [-L LANG]
                    [-n PORT] [-m MACROS] [-N] [-l LOGGING]
                    [--logfile LOGFILE] [--timeout TIMEOUT] [-T] [-f FONTPATH]
                    [--nofontcache] [--testsuite] [-A ACTION] [-F DIFFFILE]
                    [--diffpages DIFFPAGES] [-D DEFINE] [--debug] [-C CAPTURE]
                    [-z EXTRAS] [-V PDFVERSION] [-I] [-E EXPERIMENTAL]
                    [pid]

positional arguments:
  pid                   Project id or full path to a ptxprint.cfg file

options:
  -h, --help            show this help message and exit
  -c CONFIG, --config CONFIG
                        Configuration path to load
  -M MODULE, --module MODULE
                        Module to print
  -p PARATEXT, --paratext PARATEXT
                        Path to Paratext Projects directory
  -d DIRECTORY, --directory DIRECTORY
                        Directory to store temporary files in
  -P, --print           Hits print
  -b BOOKS, --books BOOKS
                        Reference list to print (as in Choose Books)
  -Z ZIP, --zip ZIP     Unzip into project directory and delete at end
  -R RUNS, --runs RUNS  limit xetex runs
  -q, --quiet           No splash screen. Limit output
  -L LANG, --lang LANG  Set UI language code
  -n PORT, --port PORT  Listen on given port
  -m MACROS, --macros MACROS
                        Directory containing TeX macros (paratext2.tex)
  -N, --nointernet      Disable all internet access
  -l LOGGING, --logging LOGGING
                        Logging level [DEBUG, *INFO*, WARN, ERROR, number]
  --logfile LOGFILE     Set logging file [ptxprint.log] or "none"
  --timeout TIMEOUT     xetex runtime timeout
  -T, --testing         Run in testing, output xdv
  -f FONTPATH, --fontpath FONTPATH
                        Directory of fonts to include (repeatable)
  --nofontcache         Don't update list of system fonts
  --testsuite           Only use fonts from project and testsuite
  -A ACTION, --action ACTION
                        Run view method instead of print
  -F DIFFFILE, --difffile DIFFFILE
                        Create difference PDF against PDF file
  --diffpages DIFFPAGES
                        Maximum number of pages to insert in diff file
  -D DEFINE, --define DEFINE
                        set UI component=value. Repeatable
  --debug               Give debug output
  -C CAPTURE, --capture CAPTURE
                        Capture interaction events to file. Not to be used yet
  -z EXTRAS, --extras EXTRAS
                        Special bit flags: 0-3 - verbosity of xdvipdfmx
  -V PDFVERSION, --pdfversion PDFVERSION
                        PDF Version to read and write * 10 (default=14)
  -I, --identify        add widget names to tooltips
  -E EXPERIMENTAL, --experimental EXPERIMENTAL
                        Enable experimental bits: 0 = UI extensions
